const mat2 bayerMatrix2 = mat2 (0.25,0.75,1.00,0.50);

const mat4 bayerMatrix4 = mat4 (
    0.0625, 0.5625, 0.1875, 0.6875,
    0.8125, 0.3125, 0.9375, 0.4375,
    0.25  , 0.75  , 0.125 , 0.625,
    1.0   , 0.5   , 0.875 , 0.375
);

const float bayerMatrix8[64] = float[] (
	0.015625, 0.515625, 0.140625, 0.640625, 0.046875, 0.546875, 0.171875, 0.671875,
	0.765625, 0.265625, 0.890625, 0.390625, 0.796875, 0.296875, 0.921875, 0.421875,
	0.203125, 0.703125, 0.078125, 0.578125, 0.234375, 0.734375, 0.109375, 0.609375,
	0.953125, 0.453125, 0.828125, 0.328125, 0.984375, 0.484375, 0.859375, 0.359375,
	0.0625  , 0.5625  , 0.1875  , 0.6875  , 0.03125 , 0.53125 , 0.15625 , 0.65625,
	0.8125  , 0.3125  , 0.9375  , 0.4375  , 0.78125 , 0.28125 , 0.90625 , 0.40625,
	0.25    , 0.75    , 0.125   , 0.625   , 0.21875 , 0.71875 , 0.09375 , 0.59375,
	1.0     , 0.5     , 0.875   , 0.375   , 0.96875 , 0.46875 , 0.84375 , 0.34375
);



bool Dither2(vec2 pos, float treshold) {
    int x = int(mod(pos.x, 2.0));
    int y = int(mod(pos.y, 2.0));
	return bayerMatrix2[x][y] < treshold;
}

bool Dither4(vec2 pos, float treshold) {
    int x = int(mod(pos.x, 4.0));
    int y = int(mod(pos.y, 4.0));
	return bayerMatrix4[x][y] < treshold;
}

bool Dither8(vec2 pos, float treshold) {
    int x = int(mod(pos.x, 8.0));
    int y = int(mod(pos.y, 8.0));
	return bayerMatrix8[x + y * 8] < treshold;
}